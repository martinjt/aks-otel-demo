mode: daemonset
nameOverride: collector
resources:
  limits:
    cpu: 1
    memory: 0.5Gi
presets:
  kubeletMetrics:
    enabled: true
  kubernetesAttributes:
    enabled: true
image:
  tag: "0.81.0"
config:
  processors:
    # metricstransform/podnetwork_aggregation:
    #   transforms:
    #     - include: k8s.pod.network.io
    #       match_type: strict
    #       experimental_match_labels:
    #         direction: receive
    #       action: insert
    #       new_name: k8s.pod.network.io.receive_bytes
    #       operations:
    #         - action: aggregate_labels
    #           label_set: [k8s.namespace, k8s.pod.name, k8s.pod.uid, k8s.node.name]
    #           aggregation_type: sum
    #     - include: k8s.pod.network.io
    #       match_type: strict
    #       experimental_match_labels:
    #         direction: transmit
    #       action: insert
    #       new_name: k8s.pod.network.io.transmit_bytes
    #       operations:
    #         - action: aggregate_labels
    #           label_set: [k8s.namespace, k8s.pod.name, k8s.pod.uid, k8s.node.name]
    #           aggregation_type: sum
    # metricstransform/nodenetwork_aggregation:
    #   transforms:
    #     - include: k8s.node.network.io
    #       match_type: strict
    #       experimental_match_labels:
    #         direction: receive
    #       action: insert
    #       new_name: k8s.node.network.io.receive_bytes
    #       operations:
    #         - action: aggregate_labels
    #           label_set: [k8s.node.name]
    #           aggregation_type: sum
    #     - include: k8s.node.network.io
    #       match_type: strict
    #       experimental_match_labels:
    #         direction: transmit
    #       action: insert
    #       new_name: k8s.node.network.io.transmit_bytes
    #       operations:
    #         - action: aggregate_labels
    #           label_set: [k8s.node.name]
    #           aggregation_type: sum

    # filter/networkmetrics:
    #   error_mode: ignore
    #   metrics:
    #     metric:
    #     - 'name == "k8s.pod.network.io"'
    #     - 'name == "k8s.node.network.io"'
    #     - 'name == "k8s.pod.network.errors"'
    #     - 'name == "k8s.node.network.errors"'

  exporters:
    otlp/kubelet_metrics:
      endpoint: api.honeycomb.io:443
      headers:
        x-honeycomb-team: ${HONEYCOMB_API_KEY}
        x-honeycomb-dataset: "kubelet-metrics"
  service:
    pipelines:
      metrics:
        # processors:
        #   - metricstransform/podnetwork_aggregation
        #   - metricstransform/nodenetwork_aggregation
        #   - filter/networkmetrics
        exporters: [otlp/kubelet_metrics]
      logs: null
      traces: null

ports:
  otlp:
    enabled: false
  otlp-http:
    enabled: false
  jaeger-compact:
    enabled: false
  jaeger-thrift:
    enabled: false
  jaeger-grpc:
    enabled: false
  zipkin:
    enabled: false
